## rebase hard local changes on other branch like master
git rebase -Xtheirs master

## squash all comits from a branch
## ex: 20 commits
git rebase -i HEAD~20

## delete all branches except master
git branch | grep -v "master" | xargs git branch -D 

## avoid conflicts again on rebase you did before
git config --global rerere.enabled 1

## permission denied on commit 
sudo chown -R $USER .git && chmod -R +rwX .git

## make file executable
chmod u+x PATH

## write lines in file with echo and line break
echo -e 'pouet\npouet'

## extract all commits from one branch
git log master --date-order --format='%ai %an <%ae> %h %f' --author="bagunar" > output

## replace local branch  with local
git reset --hard origin/master

## revert commits hard way
git reset --hard 123

# Cr√©er un nouveau commit qui contient tous les changements (pour eviter de se taper tous les squash au moment du rebase)
git reset --soft HEAD~12
git commit -m "Votre message de commit"
